---
name: docker push
description: Push docker images to registry

inputs:
    images:
        description: List of images to build in format [image1, image2, ...]
        required: true
        type: string
    architecture:
        description: Image architecture
        required: true
        type: string
    registry:
        description: Docker registry
        required: true
        type: string
    registry_username:
        description: Docker registry username
        required: true
        type: string
    registry_token:
        description: Docker registry token
        required: true
        type: string
    repository_owner:
        description: GitHub repository owner
        required: true
        type: string

runs:
    using: composite
    matrix:
        image: ${{ fromJson(inputs.images) }}
    steps:
        - name: Create dev environment 📦
          uses: ./.github/actions/create-dev-env
          with:
              architecture: ${{ inputs.architecture }}

        - name: Read build variables
          working-directory: docker
          id: build_vars
          run: |
              vars=$(cat build.json | jq -c '[.variable | to_entries[] | {"key": .key, "value": .value.default}] | from_entries')
              echo "vars=$vars" >> "${GITHUB_OUTPUT}"
          shell: bash

        - name: Docker meta 📝
          id: meta
          uses: docker/metadata-action@v4
          env: ${{ fromJson(steps.build_vars.outputs.vars) }}
          with:
              images: |
                  name=${{ inputs.registry }}/${{ inputs.repository_owner }}/${{ matrix.image }}
              tags: |
                  type=edge,enable={{is_default_branch}}
                  type=sha,enable=${{ github.ref_type != 'tag' }}
                  type=ref,event=pr
                  type=match,pattern=v(\d{2}\.\d{2}.\d+.*),group=1
                  type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
                  type=raw,value=${{ matrix.image }}-${{ env.QE_VERSION }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

        - name: Login to Container Registry 🔑
          uses: docker/login-action@v2
          with:
              registry: ${{ inputs.registry }}
              username: ${{ inputs.registry_username }}
              password: ${{ inputs.registry_token }}

        - name: Set tags for image and push 🏷️📤💾
          run: |
              declare -a arr=(${{ steps.meta.outputs.tags }})
              for tag in "${arr[@]}"; do
                  arch_tag=$(echo ${tag} | sed "s/:/:${{ inputs.architecture }}-/")
                  docker tag ${{ inputs.repository_owner }}/${{ matrix.image }}:newly-baked ${arch_tag}
                  docker push ${arch_tag}

                  # write tag to file
                  mkdir -p /tmp/${{ inputs.repository_owner }}/
                  echo ${arch_tag} >> /tmp/${{ inputs.repository_owner }}/${{ inputs.image }}-${{ inputs.architecture }}-tags.txt
              done
          shell: bash

        - name: Upload tags file 📤
          uses: actions/upload-artifact@v4
          with:
              name: ${{ inputs.registry }}-${{ inputs.image }}-${{ inputs.architecture }}-tags
              path: /tmp/${{ inputs.repository_owner }}/${{ inputs.image }}-${{ inputs.architecture }}-tags.txt
              retention-days: 3
