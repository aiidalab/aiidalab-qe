---
name: Integration tests the bulid image

on:
    workflow_call:
        inputs:
            architecture:
                description: Image architecture
                required: true
                type: string
            runsOn:
                description: GitHub Actions Runner image
                required: true
                type: string

jobs:
    integration-tests:
        runs-on: ${{ inputs.runsOn }}

        steps:
            - name: Checkout Repo ⚡️
              uses: actions/checkout@v3
            - name: Create dev environment 📦
              uses: ./.github/actions/create-dev-env
              with:
                  architecture: ${{ inputs.architecture }}
            - name: Load image to Docker 📥
              uses: ./.github/actions/load-image
              with:
                  image: ${{ inputs.image }}
                  architecture: ${{ inputs.architecture }}

            - name: Set jupyter token env
              run: echo "JUPYTER_TOKEN=$(openssl rand -hex 32)" >> $GITHUB_ENV
              shell: bash

            ## The Firefox and its engine geckodrive need do be installed manually to run
            ## selenium tests.
            #- name: Install Firefox
            #  uses: browser-actions/setup-firefox@latest
            #  with:
            #      firefox-version: '96.0'

            #- name: Install geckodriver
            #  run: |
            #      wget -c https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz
            #      tar xf geckodriver-v0.30.0-linux64.tar.gz -C /usr/local/bin
            #  shell: bash

            #- name: Run pytest for firefox
            #  run: VERSION=newly-baked pytest --driver Firefox tests_integration
            #  shell: bash

            - name: Run pytest for Chrome
              run: VERSION=newly-baked pytest --driver Chrome tests_integration
              shell: bash

            - name: Upload screenshots as artifacts
              if: always()
              uses: actions/upload-artifact@v3
              with:
                  name: Screenshots-CI-${{ inputs.architecture }}
                  path: screenshots/
                  if-no-files-found: error
