---
name: Build and test a new image, upload it as artifact

env:
    OWNER: ${{ github.repository_owner }}
    FORCE_COLOR: 1
    BUILDKIT_PROGRESS: plain

on:
    workflow_call:
        inputs:
            image:
                description: Image name
                required: true
                type: string
            architecture:
                description: Image architecture, e.g. amd64, arm64
                required: true
                type: string
            runsOn:
                description: GitHub Actions Runner image
                required: true
                type: string

jobs:
    build-test-upload:
        runs-on: ${{ inputs.runsOn }}
        continue-on-error: true

        steps:
            - name: Checkout Repo ⚡️
              uses: actions/checkout@v4
            - name: Create dev environment 📦
              uses: ./.github/actions/create-dev-env
              with:
                  architecture: ${{ inputs.architecture }}

            # Self-hosted runners share a state (whole VM) between runs
            # Also, they might have running or stopped containers,
            # which are not cleaned up by `docker system prun`
            - name: Reset docker state and cleanup artifacts 🗑️
              if: ${{ ! startsWith(inputs.runsOn, 'ubuntu') }}
              run: |
                  docker kill $(docker ps --quiet) || true
                  docker rm $(docker ps --all --quiet) || true
                  docker system prune --all --force
                  rm -rf /tmp/aiidalab/
              shell: bash

            - name: Set up Docker Buildx
              if: ${{ startsWith(inputs.runsOn, 'ubuntu') }}
              uses: docker/setup-buildx-action@v3

            - name: Build and load to Docker
              id: build-upload
              uses: docker/bake-action@v5
              with:
                  # Load locally into Docker for testing
                  load: true
                  workdir: docker/
                  set: |
                      *.platform=linux/${{ inputs.architecture }}
                      *.cache-to=type=gha,scope=${{ github.workflow }},mode=max
                      *.cache-from=type=gha,scope=${{ github.workflow }}
                  files: |
                      docker-bake.hcl
                      build.json

            - name: Save image as a tar for later use 💾
              run: |
                  mkdir -p /tmp/aiidalab/
                  docker save ${{ env.OWNER }}/${{ inputs.image }} -o /tmp/aiidalab/${{ inputs.image }}-${{ inputs.architecture }}.tar
              shell: bash
              if: ${{ !github.event.pull_request.head.repo.fork }}

            - name: Upload image as artifact 📤
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ inputs.image }}-${{ inputs.architecture }}
                  path: /tmp/aiidalab/${{ inputs.image }}-${{ inputs.architecture }}.tar
                  retention-days: 3
              if: ${{ !github.event.pull_request.head.repo.fork }}

            - name: Run tests ✅
              uses: ./.github/actions/integration-tests
              with:
                  architecture: ${{ inputs.architecture }}
                  runsOn: ${{ inputs.runsOn }}
