---
name: Build a new image and test it; then upload the image, tags and manifests to GitHub artifacts

env:
    OWNER: ${{ github.repository_owner }}

on:
    workflow_call:
        inputs:
            image:
                description: Image name
                required: true
                type: string
            architecture:
                description: Image architecture, e.g. amd64, arm64
                required: true
                type: string
            runsOn:
                description: GitHub Actions Runner image
                required: true
                type: string

jobs:
    build-test-upload:
        runs-on: ${{ inputs.runsOn }}

        steps:
            - name: Checkout Repo ⚡️
              uses: actions/checkout@v3
            - name: Create dev environment 📦
              uses: ./.github/actions/create-dev-env
              with:
                  architecture: ${{ inputs.architecture }}

            - name: Build image 🛠
              working-directory: docker
              run: docker buildx bake --set qe.platform=linux/${{ inputs.architecture }} -f docker-bake.hcl -f build.json --load
              env:
                  # Use buildx
                  DOCKER_BUILDKIT: 1
                  # Full logs for CI build
                  BUILDKIT_PROGRESS: plain
              shell: bash

            #- name: Run tests ✅
            #  run: VERSION=newly-build pytest -s tests/test-common.py tests/test-${{ inputs.image }}.py --variant ${{ inputs.image }}
            #  shell: bash

            - name: Save image as a tar for later use 💾
              run: docker save ${{ env.OWNER }}/${{ inputs.image }} -o /tmp/${{ inputs.image }}-${{ inputs.architecture }}.tar
              shell: bash

            - name: Upload image as artifact 💾
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ inputs.image }}-${{ inputs.architecture }}
                  path: /tmp/${{ inputs.image }}-${{ inputs.architecture }}.tar
                  retention-days: 3
