---
name: Build, and push Docker Image

env:
    OWNER: ${{ github.repository_owner }}

on:
    pull_request:
        paths:
            - .github/workflows/docker.yml
            # We use local reusable workflows to make architecture clean an simple
            # https://docs.github.com/en/actions/using-workflows/reusing-workflows
            - .github/workflows/docker-build-test-upload.yml
            - .github/workflows/docker-merge-tags.yml
            - .github/workflows/docker-push.yml

            # We use local composite actions to combine multiple workflow steps within one action
            # https://docs.github.com/en/actions/creating-actions/about-custom-actions#composite-actions
            - .github/actions/create-dev-env/action.yml
            - .github/actions/load-image/action.yml

            - src/**
            - qe.ipynb
            - setup.cfg
            - pyproject.toml

    push:
        branches:
            - main
        tags:
            - v*
        paths:
            - .github/workflows/docker.yml
            # We use local reusable workflows to make architecture clean an simple
            # https://docs.github.com/en/actions/using-workflows/reusing-workflows
            - .github/workflows/docker-build-test-upload.yml
            - .github/workflows/docker-merge-tags.yml
            - .github/workflows/docker-push.yml

            # We use local composite actions to combine multiple workflow steps within one action
            # https://docs.github.com/en/actions/creating-actions/about-custom-actions#composite-actions
            - .github/actions/create-dev-env/action.yml
            - .github/actions/load-image/action.yml

            - src/**
            - qe.ipynb
            - setup.cfg
            - pyproject.toml
    workflow_dispatch:
    schedule:
      # Periodically build and test the image and keep `edge` always up-to-date
      # Weekly, at 03:00 on Monday UTC time
        - cron: 0 3 * * 1

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
    # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    bake-and-push:
        runs-on: ubuntu-latest
        timeout-minutes: 60

        outputs:
            tags: ${{ steps.meta.outputs.tags }}

        steps:
            - name: Checkout Repo ⚡️
              uses: actions/checkout@v3
            - name: Set up Docker Buildx 🏗
              uses: docker/setup-buildx-action@v2
            - name: Login to Container Registry 🔑
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Docker meta 📝
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: |
                      name=ghcr.io/${{ env.OWNER }}/qe
                  tags: |
                      type=edge,enable={{is_default_branch}}
                      type=sha,enable=${{ github.ref_type != 'tag' }}
                      type=ref,event=pr
                      type=match,pattern=v(\d{4}\.\d{4}),group=1
                      type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            - name: Build and push image 🏗📤💾
              # This is a multi-arch build
              id: bake
              uses: docker/bake-action@v3.1.0
              with:
                  # Using provenance to disable default attestation so it will build only desired images:
                  # https://github.com/orgs/community/discussions/45969
                  provenance: false
                  files: docker-bake.hcl
                  push: true
                  workdir: docker
            - name: Set output variable
              run: |
                  echo "TAGS=${{ steps.meta.outputs.tags }}" >> "${GITHUB_ENV}"


    #test-amd64:
    #    needs: bake-and-push

    #    runs-on: ubuntu-latest
    #    timeout-minutes: 30

    #    steps:
    #        - name: Checkout Repo ⚡️
    #          uses: actions/checkout@v3
    #        - name: Create dev environment 📦
    #          uses: ./.github/actions/create-dev-env
    #          with:
    #              architecture: amd64

    #        - name: Run tests ✅
    #          uses: ./.github/actions/integration-tests
    #          with:
    #              architecture: amd64
    #              tag: ${{ fromJson(needs.bake-and-push.outputs.tags).pr }}

    #test-arm64:
    #    needs: bake-and-push

    #    runs-on: buildjet-2vcpu-ubuntu-2204-arm
    #    timeout-minutes: 30

    #    steps:
    #        - name: Checkout Repo ⚡️
    #          uses: actions/checkout@v3
    #        - name: Create dev environment 📦
    #          uses: ./.github/actions/create-dev-env
    #          with:
    #              architecture: arm64

    #        - name: Run tests ✅
    #          uses: ./.github/actions/integration-tests
    #          with:
    #              architecture: arm64
    #              tag: ${{ fromJson(needs.bake-and-push.outputs.tags).pr }}

    #push-to-dockerhub:
    #    needs: [test-amd64, test-arm64]
    #    if: startsWith(github.ref, 'refs/tags/v')

    #    runs-on: ubuntu-latest

    #    steps:
    #        - name: Checkout Repo ⚡️
    #          uses: actions/checkout@v3
