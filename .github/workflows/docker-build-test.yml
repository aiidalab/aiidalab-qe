---
name: Build Docker image and test

on:
    pull_request:
    push:
        branches:
            - main
        tags:
            - v*
    workflow_dispatch:

env:
    FORCE_COLOR: 1
    IMAGE_NAME: aiidalab/qe
    BUILDKIT_PROGRESS: plain

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build-amd-test:
        name: Build & Test AMD Image
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Docker meta (GHCR) 📝
              id: meta_ghcr
              uses: docker/metadata-action@v5
              with:
                  images: |
                      name=ghcr.io/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=pr
                      type=edge,enable={{is_default_branch}}
                      type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

            - name: Build Docker image (no push)
              id: build-upload
              uses: docker/build-push-action@v5
              with:
                  tags: ${{ steps.meta_ghcr.outputs.tags }}
                  load: true
                  push: false
                  context: .
                  platforms: linux/amd64
                  cache-to: |
                      type=gha,scope=${{ github.workflow }},mode=min
                  cache-from: |
                      type=gha,scope=${{ github.workflow }}

            - name: Set Up Python 🐍
              uses: actions/setup-python@v5
              with:
                  python-version: 3.11

            - name: Install Dev Dependencies 📦
              run: pip install -r requirements-docker.txt

            - name: Set jupyter token env
              run: echo "JUPYTER_TOKEN=$(openssl rand -hex 32)" >> $GITHUB_ENV

            - name: Run pytest for Chrome
              run: pytest -sv --driver Chrome tests_integration/
              env:
                  QE_IMAGE: ${{ steps.meta_ghcr.outputs.tags }}

            - name: Upload screenshots as artifacts
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: Screenshots
                  path: screenshots/
                  if-no-files-found: error

    build-arm-test:
        name: Build & Test ARM Image
        runs-on: ubuntu-24.04-arm
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Docker meta (GHCR) 📝
              id: meta_ghcr
              uses: docker/metadata-action@v5
              with:
                  images: |
                      name=ghcr.io/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=pr
                      type=edge,enable={{is_default_branch}}
                      type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

            - name: Build Docker image (no push)
              id: build-upload
              uses: docker/build-push-action@v5
              with:
                  tags: ${{ steps.meta_ghcr.outputs.tags }}
                  load: true
                  push: false
                  context: .
                  platforms: linux/arm64
                  cache-to: |
                      type=gha,scope=${{ github.workflow }},mode=min
                  cache-from: |
                      type=gha,scope=${{ github.workflow }}

            - name: Set Up Python 🐍
              uses: actions/setup-python@v5
              with:
                  python-version: 3.11

            - name: Install Dev Dependencies 📦
              run: pip install -r requirements-docker.txt

            - name: Set jupyter token env
              run: echo "JUPYTER_TOKEN=$(openssl rand -hex 32)" >> $GITHUB_ENV

            - name: Install Chromium and Chromedriver
              run: |
                  sudo apt-get update
                  sudo apt-get install -y chromium-browser chromium-chromedriver

            - name: Set Selenium Manager path for Chromedriver
              run: echo "SE_MANAGER_PATH=/usr/lib/chromium-browser/chromedriver" >> $GITHUB_ENV

            - name: Run pytest for Chrome
              run: pytest -sv --driver Chrome tests_integration/
              env:
                  QE_IMAGE: ${{ steps.meta_ghcr.outputs.tags }}

            - name: Upload screenshots as artifacts
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: Screenshots
                  path: screenshots/
                  if-no-files-found: error
